// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "tempgrpcd.proto" (package "tempgrpcd", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Tempgrpcd } from "./tempgrpcd";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { TempgrpcdResponse } from "./tempgrpcd";
import type { TempgrpcdRequest } from "./tempgrpcd";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service tempgrpcd.Tempgrpcd
 */
export interface ITempgrpcdClient {
    /**
     * @generated from protobuf rpc: GetAmbientConditions
     */
    getAmbientConditions(input: TempgrpcdRequest, options?: RpcOptions): UnaryCall<TempgrpcdRequest, TempgrpcdResponse>;
}
/**
 * @generated from protobuf service tempgrpcd.Tempgrpcd
 */
export class TempgrpcdClient implements ITempgrpcdClient, ServiceInfo {
    typeName = Tempgrpcd.typeName;
    methods = Tempgrpcd.methods;
    options = Tempgrpcd.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetAmbientConditions
     */
    getAmbientConditions(input: TempgrpcdRequest, options?: RpcOptions): UnaryCall<TempgrpcdRequest, TempgrpcdResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<TempgrpcdRequest, TempgrpcdResponse>("unary", this._transport, method, opt, input);
    }
}
